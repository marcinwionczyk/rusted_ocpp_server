{"version":3,"sources":["components/MainForm.js","App.js","reportWebVitals.js","index.js"],"names":["MainForm","props","schema","type","properties","charger","title","enum","payload","oneOf","customData","vendorId","maxLength","reservationId","description","required","certificateChain","certificateType","onSubmit","e","formData","target","options","selectedIndex","window","alert","JSON","stringify","state","chargers","isLoaded","error","axios","get","then","res","setState","data","this","Alert","variant","message","Component","App","className","style","backgroundColor","height","Container","fluid","Navbar","bg","expand","Brand","href","Row","Col","lg","color","enableSearch","url","websocketOptions","onOpen","sock","send","formatMessage","parse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a47287.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Form from '@rjsf/bootstrap-4';\nimport axios from 'axios';\nimport {Alert} from \"react-bootstrap\";\n\nclass MainForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chargers: [],\n            isLoaded: false,\n            error: null,\n        };\n    }\n\n    schema = {\n        type: \"object\",\n        properties: {\n            charger: {\n                title: \"Select charger\",\n                type: \"string\",\n                enum: []\n            },\n            payload: {\n                title: \"Select request\",\n                type: \"object\",\n                oneOf: [\n                    {\n                        title: \"Cancel reservation\",\n                        properties: {\n                            customData: {\n                                type: \"object\",\n                                properties: {\n                                    vendorId: {\n                                        type: \"string\",\n                                        maxLength: 255\n                                    }\n                                }\n                            },\n                            reservationId: {\n                                type: \"number\",\n                                description: \"Id of the reservation to cancel\"\n                            },\n                        },\n                        required: [\"reservationId\"]\n                    },\n                    {\n                        title: \"Certificate Signed Request\",\n                        properties: {\n                            customData: {\n                                type: \"object\",\n                                properties: {\n                                    vendorId: {\n                                        type: \"string\",\n                                        maxLength: 255\n                                    }\n                                }\n                            },\n                            certificateChain: {\n                                description: \"The signed PEM encoded X.509 certificate. This can also contain the \" +\n                                    \"necessary sub CA certificates. In that case, the order of the bundle should follow \" +\n                                    \"the certificate chain, starting from the leaf certificate.\\r\\n\\r\\nThe Configuration \" +\n                                    \"Variable &lt;&lt;configkey-max-certificate-chain-size,MaxCertificateChainSize&gt;&gt; \" +\n                                    \"can be used to limit the maximum size of this field.\\r\\n\",\n                                type: \"string\",\n                                maxLength: 10000\n                            },\n                            certificateType: {\n                                type: \"string\",\n                                enum: [\"ChargingStationCertificate\", \"V2GCertificate\"]\n                            }\n                        },\n                        required: [\"certificateChain\"]\n                    }\n                ]\n            }\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"http://\" + process.env.PUBLIC_URL + \"/api/get-chargers\").then(res => {\n                this.setState({\n                    isLoaded: true,\n                    chargers: res.data\n                });\n            },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                })\n    }\n\n    onSubmit = ({formData}, e) => {\n        switch(e.target[1].options.selectedIndex) {\n            case 0:\n                formData[\"selected\"] = \"CancelReservation\";\n                break;\n            case 1:\n                formData[\"selected\"] = \"CertificateSigned\";\n                break;\n            default:\n                break;\n        }\n        window.alert(JSON.stringify(formData))\n    }\n\n\n    render() {\n        const { chargers, isLoaded, error } = this.state;\n        if (error) {\n            return <Alert variant=\"danger\">{error.message}</Alert>;\n        } else if (!isLoaded) {\n            return <Alert variant=\"info\">Loading...</Alert>;\n        } else {\n            this.schema.properties.charger.enum = chargers;\n            return (\n                <Form schema={this.schema} onSubmit={this.onSubmit} />\n            );\n        }\n\n    }\n}\n\n\nexport default MainForm;","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from \"react\";\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\nimport MainForm from \"./components/MainForm\";\nimport { LazyLog } from 'react-lazylog';\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\" style={{backgroundColor: \"black\", height: \"2000px\" }}>\n            <Container fluid>\n                <Navbar bg=\"dark\" expand=\"lg\" className='navbar-dark'>\n                    <Navbar.Brand href=\"#\">Ocpp Server web client</Navbar.Brand>\n                </Navbar>\n            </Container>\n            <Container fluid>\n                <Row style={{height: \"1949px\"}}>\n                    <Col lg='5' style={{ color: \"white\" }}>\n                        <MainForm/>\n                    </Col>\n                    <Col>\n                        <LazyLog style={{height: \"auto\"}} enableSearch url={\"ws://\" + process.env.PUBLIC_URL + \"/webclient-socket\"} websocketOptions={{\n                            onOpen: (e, sock) => {\n                                sock.send(JSON.stringify({message: \"Socket has been opened!\"}))\n                            },\n                            formatMessage: e => JSON.parse(e).message,\n                        }} />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}